name: Release/Publish/Deploy

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10
jobs:
  release:
    name: Release
    if: contains(github.ref, 'tags/v')
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Create Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
        shell: bash
      - name: Upload Release URL File for publish
        uses: actions/upload-artifact@v1
        with:
          name: release_url
          path: release_url.txt
  publish:
    name: Publish
    if: contains(github.ref, 'tags/v')
    needs: [release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: [10.x]
        os: [macos-latest, windows-latest]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Node.js Dependencies
        run: npm install
      - name: Electron Build
        run: npm run electron:build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Artifact Prefix String
        id: get_artifact_prefix
        run: echo "::set-output name=prefix::$(node .github/workflows/getappprefix.js)"
        shell: bash
      - name: Download Release URL File from release job
        uses: actions/download-artifact@v1
        with:
          name: release_url
      - name: Get Release URL File
        id: get_release_info
        run: echo "::set-output name=upload_url::$(cat release_url/release_url.txt)"
        shell: bash
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_info.outputs.upload_url }}
          asset_path: ./dist_electron/${{ steps.get_artifact_prefix.outputs.prefix }}.zip
          asset_name: ${{ steps.get_artifact_prefix.outputs.prefix }}-${{ matrix.os }}.zip
          asset_content_type: application/zip
  deploy:
    name: Deploy
    if: contains(github.ref, 'tags/v')
    needs: [release]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install Node.js Dependencies
        run: npm install
      - name: Demo Artifacts Build
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
          REPOSITORY_NAME: fool-derek/fool-derek.github.io
          BRANCH: main
          FOLDER: dist
          CLEAN: false
          TARGET_FOLDER: demo/lucky-draw
